name: Build master on push

env:
  PUBLISH_DEV_PACKS: disabled

on:
  push:
    branches: [ master ]
  release:

jobs:
  BuildAndTest:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release]
        os: [ubuntu, windows, macos]
        libtarget: [netstandard2.0, netstandard2.1]
        testtarget: [netcoreapp3.1]
        include:
          - configuration: debug
            os: windows
            libtarget: net45
            testtarget: net46
          - configuration: release
            os: windows
            libtarget: net45
            testtarget: net46
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Build library
      run: dotnet build -c ${{ matrix.configuration }} -f ${{ matrix.libtarget }} src/ICSharpCode.SharpZipLib/ICSharpCode.SharpZipLib.csproj
      
    - name: Restore test dependencies
      run: dotnet restore

    - name: Run tests
      run: dotnet test -c ${{ matrix.configuration }} -f ${{ matrix.testtarget }} --no-restore --collect="XPlat Code Coverage"
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.2.2
      with:
        fail_ci_if_error: false
        
  Codacy-Analysis:
    runs-on: ubuntu-latest
    name: Codacy Analysis CLI
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run codacy-analysis-cli
        uses: codacy/codacy-analysis-cli-action@1.1.0
        with:
          # The current issues needs to be fixed before this can be removed
          max-allowed-issues: 9999
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
        
  Package:
    needs: [BuildAndTest]
    runs-on: windows-latest
    env:
      NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
        source-url: https://nuget.pkg.github.com/icsharpcode/index.json

    - name: Build library for .NET Standard 2.0
      run: dotnet build -c Release -f netstandard2.0 /p:ContinuousIntegrationBuild=true src/ICSharpCode.SharpZipLib/ICSharpCode.SharpZipLib.csproj
    - name: Build library for .NET Standard 2.1
      run: dotnet build -c Release -f netstandard2.1 /p:ContinuousIntegrationBuild=true src/ICSharpCode.SharpZipLib/ICSharpCode.SharpZipLib.csproj
    - name: Build library for .NET Framework 4.5
      run: dotnet build -c Release -f net45 /p:ContinuousIntegrationBuild=true src/ICSharpCode.SharpZipLib/ICSharpCode.SharpZipLib.csproj

    - name: Create nuget package
      run: dotnet pack src/ICSharpCode.SharpZipLib/ICSharpCode.SharpZipLib.csproj --configuration Release --output dist /p:ContinuousIntegrationBuild=true /p:EmbedUntrackedSources=true /p:Version=$(git describe --abbrev | % { $_.substring(1) })
      
    - name: Upload nuget package artifact
      uses: actions/upload-artifact@v2
      with:
        name: Nuget package
        path: dist/*.nupkg
